{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Mardani.Amirhosein/Desktop/Mook/Mook/MookAdmin/MookAdmin/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as $ from 'jquery';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./address.service\";\nexport class DataService {\n  constructor(address) {\n    this.address = address;\n    this.Admin = [{\n      AdminID: 1,\n      AdminName: \"امیرحسین\",\n      AdminPhone: \"09123421550\",\n      createdDate: \"1401/08/35\",\n      updateDate: \"1401/13/68\",\n      IsDeleted: false\n    }];\n    /************************************************************************************************/\n\n    /************************************************************************************************/\n\n    /****************************************  Message **********************************************/\n\n    /************************************************************************************************/\n\n    /************************************************************************************************/\n\n    this.message = {\n      infoUpdatedSuccessfully: \"اطلاعات با موفقیت آپدیت شد\"\n    };\n    /************************************************************************************************/\n\n    /************************************************************************************************/\n\n    /***************************************  Book api  *********************************************/\n\n    /************************************************************************************************/\n\n    /************************************************************************************************/\n\n    this.bookToBuy = [{\n      bookToBuyId: 1,\n      studentId: 1,\n      bookName: \"کتاب 1\",\n      bookAuthor: \"نویسنده 1\",\n      bookPublisher: \"انتشارات 1\"\n    }, {\n      bookToBuyId: 2,\n      studentId: 2,\n      bookName: \"کتاب 2\",\n      bookAuthor: \"نویسنده 2\",\n      bookPublisher: \"انتشارات 2\"\n    }, {\n      bookToBuyId: 3,\n      studentId: 3,\n      bookName: \"کتاب 3\",\n      bookAuthor: \"نویسنده 3\",\n      bookPublisher: \"انتشارات 3\"\n    }, {\n      bookToBuyId: 4,\n      studentId: 4,\n      bookName: \"کتاب 4\",\n      bookAuthor: \"نویسنده 4\",\n      bookPublisher: \"انتشارات 4\"\n    }];\n    this.Book = [];\n    /************************************************************************************************/\n\n    /************************************************************************************************/\n\n    /***************************************  request api  ******************************************/\n\n    /************************************************************************************************/\n\n    /************************************************************************************************/\n\n    this.Request = [];\n    /************************************************************************************************/\n\n    /************************************************************************************************/\n\n    /***************************************  student api  ******************************************/\n\n    /************************************************************************************************/\n\n    /************************************************************************************************/\n\n    this.studentReport = [];\n    this.Student = [];\n    /************************************************************************************************/\n\n    /************************************************************************************************/\n\n    /***************************************  comment api  ******************************************/\n\n    /************************************************************************************************/\n\n    /************************************************************************************************/\n    //comment header less than 20 words\n\n    this.comment = [];\n  }\n\n  getAdmin() {\n    return this.Admin;\n  }\n\n  getBookToBuy() {\n    return this.bookToBuy;\n  }\n\n  updateBook(book) {\n    return this.UpdateBook(book);\n  }\n\n  createBook(book) {\n    return this.CreateBook(book);\n  }\n\n  getBook() {\n    return this.GetBook();\n  }\n\n  GetBook() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      var settings = {\n        \"url\": _this.address.getBaseUrl() + _this.address.getUrlAddress().Book,\n        \"method\": \"GET\",\n        \"timeout\": 0,\n        \"headers\": {\n          \"Accept\": \"text/plain\"\n        }\n      };\n      _this.Book = yield $.ajax(settings).done(function (response) {\n        return response;\n      });\n      return _this.Book;\n    })();\n  }\n\n  UpdateBook(book) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      var settings = {\n        \"url\": _this2.address.getBaseUrl() + _this2.address.getUrlAddress().Book,\n        \"method\": \"PUT\",\n        \"timeout\": 0,\n        \"headers\": {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"text/plain\"\n        },\n        \"data\": JSON.stringify({\n          \"bookID\": book.bookID,\n          \"bookName\": book.bookName,\n          \"bookPagesCount\": book.bookPagesCount,\n          \"bookRating\": book.bookRating,\n          \"publisher\": book.publisher,\n          \"author\": book.author,\n          \"bookRatingCount\": book.bookratingCount,\n          \"bookDescription\": book.bookDescription,\n          \"isAvailable\": book.isAvailable,\n          \"createdDate\": book.createdDate,\n          \"isDamaged\": book.isDamaged\n        })\n      };\n      let result = yield $.ajax(settings).done(res => {\n        return res;\n      });\n      return result;\n    })();\n  }\n\n  CreateBook(book) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      var settings = {\n        \"url\": _this3.address.getBaseUrl() + _this3.address.getUrlAddress().Book,\n        \"method\": \"POST\",\n        \"timeout\": 0,\n        \"headers\": {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"text/plain\"\n        },\n        \"data\": JSON.stringify({\n          \"bookID\": book.bookID,\n          \"AcceptedAdminID\": book.adminID,\n          \"bookName\": book.bookName,\n          \"bookPagesCount\": book.bookPagesCount,\n          \"bookRating\": book.bookRating,\n          \"publisher\": book.publisher,\n          \"author\": book.author,\n          \"bookRatingCount\": book.bookratingCount,\n          \"bookDescription\": book.bookDescription,\n          \"isAvailable\": book.isAvailable,\n          \"createdDate\": book.createdDate,\n          \"isDamaged\": book.isDamaged\n        })\n      };\n      let result = yield $.ajax(settings).done(res => {\n        return res;\n      });\n      return result;\n    })();\n  }\n\n  getRequest() {\n    return this.GetRequest();\n  }\n\n  acceptRequest(id) {\n    return this.AcceptRequest(id);\n  }\n\n  deleteRequest(id) {\n    return this.DeleteRequest(id);\n  }\n\n  createRequest(request) {\n    return this.CreateRequest(request);\n  }\n\n  GetRequest() {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      var settings = {\n        \"url\": _this4.address.getBaseUrl() + _this4.address.getUrlAddress().requestList,\n        \"method\": \"GET\",\n        \"timeout\": 0,\n        \"headers\": {\n          \"Accept\": \"text/plain\"\n        }\n      };\n      _this4.Request = yield $.ajax(settings).done(function (response) {\n        return response;\n      });\n      return _this4.Request;\n    })();\n  }\n\n  AcceptRequest(id) {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      var settings = {\n        \"url\": _this5.address.getBaseUrl() + _this5.address.getUrlAddress().requestAccept + id,\n        \"method\": \"PUT\",\n        \"timeout\": 0,\n        \"headers\": {\n          \"Accept\": \"text/plain\"\n        }\n      };\n      let result = yield $.ajax(settings).done(res => {\n        return res;\n      });\n      return result;\n    })();\n  }\n\n  DeleteRequest(id) {\n    var _this6 = this;\n\n    return _asyncToGenerator(function* () {\n      var settings = {\n        \"url\": _this6.address.getBaseUrl() + _this6.address.getUrlAddress().requestDelete + id,\n        \"method\": \"DELETE\",\n        \"timeout\": 0,\n        \"headers\": {\n          \"Accept\": \"text/plain\"\n        }\n      };\n      let result = yield $.ajax(settings).done(res => {\n        return res;\n      });\n      return result;\n    })();\n  }\n\n  CreateRequest(request) {\n    var _this7 = this;\n\n    return _asyncToGenerator(function* () {\n      var settings = {\n        \"url\": _this7.address.getBaseUrl() + _this7.address.getUrlAddress().requestList,\n        \"method\": \"POST\",\n        \"timeout\": 0,\n        \"headers\": {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"text/plain\"\n        },\n        // \"data\": JSON.stringify({\n        //     requestID: request.requestID,\n        //     studentID: request.studentID,\n        //     requestAcceptedDate: request.requestAcceptedDate,\n        //     isAccepted: request.isAccepted,\n        //     requestFinishedDate: request.requestFinishedDate,\n        //     isDelayed: request.isDelayed,\n        //     delayDays: request.delayDays,\n        //     requestDecription: request.requestDecription,\n        //     createdDate: date.now(),\n        //     isDeleted: request.isDeleted,\n        //     requestDetails: request.requestDetails,\n        //     students: request.students,\n        // }),\n        \"data\": JSON.stringify({\n          \"requestID\": 31397546,\n          \"studentID\": 38862802,\n          \"requestAcceptedDate\": \"tempor nulla eiusmod\",\n          \"isAccepted\": false,\n          \"requestFinishedDate\": \"ut consectetur dolor ullamco\",\n          \"isDelayed\": false,\n          \"delayDays\": -17270024,\n          \"requestDecription\": \"eu fu\",\n          \"createdDate\": \"reprehenderit aliquip\",\n          \"isDeleted\": false,\n          \"requestDetails\": [{\n            \"requestDetailID\": -6714494,\n            \"requestHeaderID\": -94141231,\n            \"bookID\": -80081852,\n            \"books\": {\n              \"bookID\": -36604591,\n              \"acceptedAdminID\": -97080096,\n              \"bookName\": \"enim tempor est ut\",\n              \"bookPagesCount\": -55287901,\n              \"bookRating\": 48775824.62162477,\n              \"publisher\": \"aute ut sunt\",\n              \"author\": \"anim consequat in consectetur dolore\",\n              \"bookRatingCount\": -67461384,\n              \"bookDescription\": \"dolor ut\",\n              \"isAvailable\": false,\n              \"isDamaged\": true,\n              \"createdDate\": \"cillum cupidatat\"\n            },\n            \"requestDetailDescription\": \"incididunt sed\",\n            \"isDamaged\": false,\n            \"isLost\": true\n          }, {\n            \"requestDetailID\": -88684681,\n            \"requestHeaderID\": 97641356,\n            \"bookID\": 98472638,\n            \"books\": {\n              \"bookID\": -91869192,\n              \"acceptedAdminID\": 15133666,\n              \"bookName\": \"mollit\",\n              \"bookPagesCount\": 5443725,\n              \"bookRating\": -8269378.559137672,\n              \"publisher\": \"tempor\",\n              \"author\": \"aliqua \",\n              \"bookRatingCount\": -72721760,\n              \"bookDescription\": \"dolore Duis\",\n              \"isAvailable\": true,\n              \"isDamaged\": true,\n              \"createdDate\": \"labore ex\"\n            },\n            \"requestDetailDescription\": \"officia commodo\",\n            \"isDamaged\": false,\n            \"isLost\": false\n          }],\n          \"students\": {\n            \"studentID\": 51352121,\n            \"acceptedAdminID\": -37593478,\n            \"studentName\": \"deserunt mollit sit\",\n            \"studentSSID\": \"magna ea ullamco\",\n            \"studentUniversityID\": \"i\",\n            \"spamCount\": -66289982,\n            \"isSuspended\": false,\n            \"isRegistered\": true,\n            \"createdDate\": \"mollit eiusmod officia ea\",\n            \"isBlocked\": true,\n            \"reportPoint\": 50573857,\n            \"isSpam\": false,\n            \"isDeleted\": true\n          }\n        })\n      };\n      let result = yield $.ajax(settings).done(res => {\n        return res;\n      });\n      return result;\n    })();\n  }\n\n  getStudentReport() {\n    return this.GetStudentReport();\n  }\n\n  getStudent() {\n    return this.GetStudent();\n  }\n\n  acceptNewRegister(id) {\n    return this.AcceptNewRegister(id);\n  }\n\n  deleteNewRegister(id) {\n    return this.DeleteNewRegister(id);\n  }\n\n  updateStudent(student) {\n    return this.UpdateStudent(student);\n  }\n\n  createStudent(student) {\n    return this.CreateStudent(student);\n  }\n\n  suspendStudent(id) {\n    return this.SuspendStudent(id);\n  }\n\n  blockStudent(id) {\n    return this.BlockStudent(id);\n  }\n\n  GetStudentReport() {\n    var _this8 = this;\n\n    return _asyncToGenerator(function* () {\n      var settings = {\n        \"url\": _this8.address.getBaseUrl() + _this8.address.getUrlAddress().studentReport,\n        \"method\": \"GET\",\n        \"timeout\": 0,\n        \"headers\": {\n          \"Accept\": \"text/plain\"\n        }\n      };\n      _this8.studentReport = yield $.ajax(settings).done(function (res) {\n        return res;\n      });\n      return _this8.studentReport;\n    })();\n  }\n\n  GetStudent() {\n    var _this9 = this;\n\n    return _asyncToGenerator(function* () {\n      var settings = {\n        \"url\": _this9.address.getBaseUrl() + _this9.address.getUrlAddress().studentList,\n        \"method\": \"GET\",\n        \"timeout\": 0,\n        \"headers\": {\n          \"Accept\": \"text/plain\"\n        }\n      };\n      _this9.Student = yield $.ajax(settings).done(function (res) {\n        return res;\n      });\n      return _this9.Student;\n    })();\n  }\n\n  AcceptNewRegister(id) {\n    var _this10 = this;\n\n    return _asyncToGenerator(function* () {\n      let studentChange = _this10.address.getUrlAddress().studentChange.replace(\"{0}\", id.toString()).replace(\"{1}\", _this10.address.getMethod().student.IsRegistered.toString());\n\n      var settings = {\n        \"url\": _this10.address.getBaseUrl() + studentChange,\n        \"method\": \"PATCH\",\n        \"timeout\": 0,\n        \"headers\": {\n          \"Accept\": \"text/plain\"\n        }\n      };\n      let result = yield $.ajax(settings).done(res => {\n        return res;\n      });\n      return result;\n    })();\n  }\n\n  DeleteNewRegister(id) {\n    var _this11 = this;\n\n    return _asyncToGenerator(function* () {\n      var settings = {\n        \"url\": _this11.address.getBaseUrl() + _this11.address.getUrlAddress().newRegisterDelete + id,\n        \"method\": \"DELETE\",\n        \"timeout\": 0,\n        \"headers\": {\n          \"Accept\": \"text/plain\"\n        }\n      };\n      let result = yield $.ajax(settings).done(res => {\n        return res;\n      });\n      return result;\n    })();\n  }\n\n  UpdateStudent(student) {\n    var _this12 = this;\n\n    return _asyncToGenerator(function* () {\n      var settings = {\n        \"url\": _this12.address.getBaseUrl() + _this12.address.getUrlAddress().studentList,\n        \"method\": \"PUT\",\n        \"timeout\": 0,\n        \"headers\": {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"text/plain\"\n        },\n        \"data\": JSON.stringify({\n          \"studentID\": student.studentID,\n          \"studentName\": student.studentName,\n          \"studentSSID\": student.studentSSID,\n          \"studentUniversityID\": student.studentUniversityID,\n          \"spamCount\": student.spamCount,\n          \"isSuspended\": student.isSuspended,\n          \"isRegistered\": student.isRegistered,\n          \"createdDate\": student.createdDate,\n          \"isBlocked\": student.isBlocked,\n          \"reportPoint\": student.reportPoint,\n          \"isSpam\": student.isSpam\n        })\n      };\n      let result = yield $.ajax(settings).done(res => {\n        return res;\n      });\n      return result;\n    })();\n  }\n\n  CreateStudent(student) {\n    var _this13 = this;\n\n    return _asyncToGenerator(function* () {\n      var settings = {\n        \"url\": _this13.address.getBaseUrl() + _this13.address.getUrlAddress().studentList,\n        \"method\": \"POST\",\n        \"timeout\": 0,\n        \"headers\": {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"text/plain\"\n        },\n        \"data\": JSON.stringify({\n          \"studentID\": student.studentID,\n          \"studentName\": student.studentName,\n          \"studentSSID\": student.studentSSID,\n          \"studentUniversityID\": student.studentUniversityID,\n          \"spamCount\": student.spamCount,\n          \"isSuspended\": student.isSuspended,\n          \"isRegistered\": student.isRegistered,\n          \"createdDate\": student.createdDate,\n          \"isBlocked\": student.isBlocked,\n          \"reportPoint\": student.reportPoint,\n          \"isSpam\": student.isSpam,\n          \"AcceptedAdminID\": student.adminID\n        })\n      };\n      let result = yield $.ajax(settings).done(res => {\n        return res;\n      });\n      return result;\n    })();\n  }\n\n  SuspendStudent(id) {\n    var _this14 = this;\n\n    return _asyncToGenerator(function* () {\n      let studentChange = _this14.address.getUrlAddress().studentChange.replace(\"{0}\", id.toString()).replace(\"{1}\", _this14.address.getMethod().student.IsSuspended.toString());\n\n      var settings = {\n        \"url\": _this14.address.getBaseUrl() + studentChange,\n        \"method\": \"PATCH\",\n        \"timeout\": 0,\n        \"headers\": {\n          \"Accept\": \"text/plain\"\n        }\n      };\n      let result = yield $.ajax(settings).done(res => {\n        return res;\n      });\n      return result;\n    })();\n  }\n\n  BlockStudent(id) {\n    var _this15 = this;\n\n    return _asyncToGenerator(function* () {\n      let studentChange = _this15.address.getUrlAddress().studentChange.replace(\"{0}\", id.toString()).replace(\"{1}\", _this15.address.getMethod().student.IsBlocked.toString());\n\n      var settings = {\n        \"url\": _this15.address.getBaseUrl() + studentChange,\n        \"method\": \"PATCH\",\n        \"timeout\": 0,\n        \"headers\": {\n          \"Accept\": \"text/plain\"\n        }\n      };\n      let result = yield $.ajax(settings).done(res => {\n        return res;\n      });\n      return result;\n    })();\n  }\n\n  getComment() {\n    return this.getCommentList();\n  }\n\n  acceptComment(id) {\n    this.AcceptComment(id);\n  }\n\n  deleteComment(id) {\n    this.DeleteComment(id);\n  }\n\n  getCommentList() {\n    var _this16 = this;\n\n    return _asyncToGenerator(function* () {\n      var settings = {\n        \"url\": _this16.address.getBaseUrl() + _this16.address.getUrlAddress().commentList,\n        \"method\": \"GET\",\n        \"timeout\": 0,\n        \"headers\": {\n          \"Accept\": \"text/plain\"\n        }\n      };\n      _this16.comment = yield $.ajax(settings).done(function (res) {\n        return res;\n      });\n      return _this16.comment;\n    })();\n  }\n\n  AcceptComment(id) {\n    var _this17 = this;\n\n    return _asyncToGenerator(function* () {\n      var settings = {\n        \"url\": _this17.address.getBaseUrl() + _this17.address.getUrlAddress().commentAccept + id,\n        \"method\": \"DELETE\",\n        \"timeout\": 0,\n        \"headers\": {\n          \"Accept\": \"text/plain\"\n        }\n      };\n      yield $.ajax(settings);\n    })();\n  }\n\n  DeleteComment(id) {\n    var _this18 = this;\n\n    return _asyncToGenerator(function* () {\n      var settings = {\n        \"url\": _this18.address.getBaseUrl() + _this18.address.getUrlAddress().commentDelete + id,\n        \"method\": \"DELETE\",\n        \"timeout\": 0,\n        \"headers\": {\n          \"Accept\": \"text/plain\"\n        }\n      };\n      yield $.ajax(settings);\n    })();\n  }\n\n}\n\nDataService.ɵfac = function DataService_Factory(t) {\n  return new (t || DataService)(i0.ɵɵinject(i1.AddressService));\n};\n\nDataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DataService,\n  factory: DataService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["$","DataService","constructor","address","AdminID","AdminName","AdminPhone","createdDate","updateDate","IsDeleted","infoUpdatedSuccessfully","bookToBuyId","studentId","bookName","bookAuthor","bookPublisher","getAdmin","Admin","getBookToBuy","bookToBuy","updateBook","book","UpdateBook","createBook","CreateBook","getBook","GetBook","settings","getBaseUrl","getUrlAddress","Book","ajax","done","response","JSON","stringify","bookID","bookPagesCount","bookRating","publisher","author","bookratingCount","bookDescription","isAvailable","isDamaged","result","res","adminID","getRequest","GetRequest","acceptRequest","id","AcceptRequest","deleteRequest","DeleteRequest","createRequest","request","CreateRequest","requestList","Request","requestAccept","requestDelete","getStudentReport","GetStudentReport","getStudent","GetStudent","acceptNewRegister","AcceptNewRegister","deleteNewRegister","DeleteNewRegister","updateStudent","student","UpdateStudent","createStudent","CreateStudent","suspendStudent","SuspendStudent","blockStudent","BlockStudent","studentReport","studentList","Student","studentChange","replace","toString","getMethod","IsRegistered","newRegisterDelete","studentID","studentName","studentSSID","studentUniversityID","spamCount","isSuspended","isRegistered","isBlocked","reportPoint","isSpam","IsSuspended","IsBlocked","getComment","getCommentList","acceptComment","AcceptComment","deleteComment","DeleteComment","commentList","comment","commentAccept","commentDelete","i0","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Mardani.Amirhosein\\Desktop\\Mook\\Mook\\MookAdmin\\MookAdmin\\src\\app\\App-Services\\data-service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { IAdmin } from './Models/IAdmin';\r\nimport { IBook, IbookToBuy } from './Models/IBook';\r\nimport { IComment } from './Models/IComment';\r\nimport { IPublisher } from './Models/IPublisher';\r\nimport { IRequestViewModel } from './Models/IRequestH';\r\nimport { IStudent, IStudentReport } from './Models/IStudent';\r\nimport * as $ from 'jquery';\r\nimport { AddressService } from './address.service';\r\nimport { date } from './date.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class DataService {\r\n\r\n    constructor(private address: AddressService) { }\r\n\r\n\r\n    private Admin: IAdmin[] = [{\r\n        AdminID: 1,\r\n        AdminName: \"امیرحسین\",\r\n        AdminPhone: \"09123421550\",\r\n        createdDate: \"1401/08/35\",\r\n        updateDate: \"1401/13/68\",\r\n        IsDeleted: false,\r\n    }]\r\n    public getAdmin() {\r\n        return this.Admin;\r\n    }\r\n    /************************************************************************************************/\r\n    /************************************************************************************************/\r\n    /****************************************  Message **********************************************/\r\n    /************************************************************************************************/\r\n    /************************************************************************************************/\r\n\r\n    public message = {\r\n        infoUpdatedSuccessfully: \"اطلاعات با موفقیت آپدیت شد\"\r\n    }\r\n\r\n\r\n    /************************************************************************************************/\r\n    /************************************************************************************************/\r\n    /***************************************  Book api  *********************************************/\r\n    /************************************************************************************************/\r\n    /************************************************************************************************/\r\n    private bookToBuy: IbookToBuy[] = [\r\n        {\r\n            bookToBuyId: 1,\r\n            studentId: 1,\r\n            bookName: \"کتاب 1\",\r\n            bookAuthor: \"نویسنده 1\",\r\n            bookPublisher: \"انتشارات 1\"\r\n        },\r\n        {\r\n            bookToBuyId: 2,\r\n            studentId: 2,\r\n            bookName: \"کتاب 2\",\r\n            bookAuthor: \"نویسنده 2\",\r\n            bookPublisher: \"انتشارات 2\"\r\n        },\r\n        {\r\n            bookToBuyId: 3,\r\n            studentId: 3,\r\n            bookName: \"کتاب 3\",\r\n            bookAuthor: \"نویسنده 3\",\r\n            bookPublisher: \"انتشارات 3\"\r\n        },\r\n        {\r\n            bookToBuyId: 4,\r\n            studentId: 4,\r\n            bookName: \"کتاب 4\",\r\n            bookAuthor: \"نویسنده 4\",\r\n            bookPublisher: \"انتشارات 4\"\r\n        }\r\n    ];\r\n    public getBookToBuy() {\r\n        return this.bookToBuy;\r\n    }\r\n\r\n    private Book: IBook[] = []\r\n\r\n    public updateBook(book: IBook) {\r\n        return this.UpdateBook(book);\r\n    }\r\n    public createBook(book: IBook) {\r\n        return this.CreateBook(book);\r\n    }\r\n    public getBook() {\r\n        return this.GetBook();\r\n    }\r\n\r\n    private async GetBook() {\r\n        var settings = {\r\n            \"url\": this.address.getBaseUrl() + this.address.getUrlAddress().Book,\r\n            \"method\": \"GET\",\r\n            \"timeout\": 0,\r\n            \"headers\": {\r\n                \"Accept\": \"text/plain\"\r\n            },\r\n        };\r\n        this.Book = await $.ajax(settings).done(function (response) {\r\n            return response;\r\n\r\n        });\r\n        return this.Book;\r\n    }\r\n    private async UpdateBook(book: IBook) {\r\n\r\n        var settings = {\r\n            \"url\": this.address.getBaseUrl() + this.address.getUrlAddress().Book,\r\n            \"method\": \"PUT\",\r\n            \"timeout\": 0,\r\n            \"headers\": {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\": \"text/plain\"\r\n            },\r\n            \"data\": JSON.stringify({\r\n                \"bookID\": book.bookID,\r\n                \"bookName\": book.bookName,\r\n                \"bookPagesCount\": book.bookPagesCount,\r\n                \"bookRating\": book.bookRating,\r\n                \"publisher\": book.publisher,\r\n                \"author\": book.author,\r\n                \"bookRatingCount\": book.bookratingCount,\r\n                \"bookDescription\": book.bookDescription,\r\n                \"isAvailable\": book.isAvailable,\r\n                \"createdDate\": book.createdDate,\r\n                \"isDamaged\": book.isDamaged\r\n            }),\r\n        };\r\n\r\n        let result: boolean = await $.ajax(settings).done(res => {\r\n            return res;\r\n        });\r\n        return result;\r\n    }\r\n    private async CreateBook(book: IBook) {\r\n\r\n        var settings = {\r\n            \"url\": this.address.getBaseUrl() + this.address.getUrlAddress().Book,\r\n            \"method\": \"POST\",\r\n            \"timeout\": 0,\r\n            \"headers\": {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\": \"text/plain\"\r\n            },\r\n            \"data\": JSON.stringify({\r\n                \"bookID\": book.bookID,\r\n                \"AcceptedAdminID\": book.adminID,\r\n                \"bookName\": book.bookName,\r\n                \"bookPagesCount\": book.bookPagesCount,\r\n                \"bookRating\": book.bookRating,\r\n                \"publisher\": book.publisher,\r\n                \"author\": book.author,\r\n                \"bookRatingCount\": book.bookratingCount,\r\n                \"bookDescription\": book.bookDescription,\r\n                \"isAvailable\": book.isAvailable,\r\n                \"createdDate\": book.createdDate,\r\n                \"isDamaged\": book.isDamaged\r\n            }),\r\n        };\r\n\r\n        let result: boolean = await $.ajax(settings).done(res => {\r\n            return res;\r\n        });\r\n        return result;\r\n    }\r\n\r\n\r\n    /************************************************************************************************/\r\n    /************************************************************************************************/\r\n    /***************************************  request api  ******************************************/\r\n    /************************************************************************************************/\r\n    /************************************************************************************************/\r\n\r\n\r\n    private Request: IRequestViewModel[] = []\r\n    public getRequest() {\r\n        return this.GetRequest()\r\n    }\r\n    public acceptRequest(id: number) {\r\n        return this.AcceptRequest(id);\r\n    }\r\n    public deleteRequest(id: number) {\r\n        return this.DeleteRequest(id);\r\n    }\r\n    public createRequest(request: IRequestViewModel) {\r\n        return this.CreateRequest(request);\r\n    }\r\n\r\n    private async GetRequest() {\r\n        var settings = {\r\n            \"url\": this.address.getBaseUrl() + this.address.getUrlAddress().requestList,\r\n            \"method\": \"GET\",\r\n            \"timeout\": 0,\r\n            \"headers\": {\r\n                \"Accept\": \"text/plain\"\r\n            },\r\n        };\r\n\r\n        this.Request = await $.ajax(settings).done(function (response) {\r\n            return response;\r\n\r\n        });\r\n        return this.Request;\r\n    }\r\n    private async AcceptRequest(id: number) {\r\n\r\n        var settings = {\r\n            \"url\": this.address.getBaseUrl() + this.address.getUrlAddress().requestAccept + id,\r\n            \"method\": \"PUT\",\r\n            \"timeout\": 0,\r\n            \"headers\": {\r\n                \"Accept\": \"text/plain\"\r\n            },\r\n        };\r\n\r\n        let result: boolean = await $.ajax(settings).done(res => {\r\n            return res;\r\n        });\r\n        return result;\r\n    }\r\n    private async DeleteRequest(id: number) {\r\n        var settings = {\r\n            \"url\": this.address.getBaseUrl() + this.address.getUrlAddress().requestDelete + id,\r\n            \"method\": \"DELETE\",\r\n            \"timeout\": 0,\r\n            \"headers\": {\r\n                \"Accept\": \"text/plain\"\r\n            },\r\n        };\r\n\r\n        let result: boolean = await $.ajax(settings).done(res => {\r\n            return res;\r\n        });\r\n        return result;\r\n    }\r\n    private async CreateRequest(request: IRequestViewModel) {\r\n        var settings = {\r\n            \"url\": this.address.getBaseUrl() + this.address.getUrlAddress().requestList,\r\n            \"method\": \"POST\",\r\n            \"timeout\": 0,\r\n            \"headers\": {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\": \"text/plain\"\r\n            },\r\n            // \"data\": JSON.stringify({\r\n            //     requestID: request.requestID,\r\n            //     studentID: request.studentID,\r\n            //     requestAcceptedDate: request.requestAcceptedDate,\r\n            //     isAccepted: request.isAccepted,\r\n            //     requestFinishedDate: request.requestFinishedDate,\r\n            //     isDelayed: request.isDelayed,\r\n            //     delayDays: request.delayDays,\r\n            //     requestDecription: request.requestDecription,\r\n            //     createdDate: date.now(),\r\n            //     isDeleted: request.isDeleted,\r\n            //     requestDetails: request.requestDetails,\r\n            //     students: request.students,\r\n            // }),\r\n            \"data\": JSON.stringify({\r\n                \"requestID\": 31397546,\r\n                \"studentID\": 38862802,\r\n                \"requestAcceptedDate\": \"tempor nulla eiusmod\",\r\n                \"isAccepted\": false,\r\n                \"requestFinishedDate\": \"ut consectetur dolor ullamco\",\r\n                \"isDelayed\": false,\r\n                \"delayDays\": -17270024,\r\n                \"requestDecription\": \"eu fu\",\r\n                \"createdDate\": \"reprehenderit aliquip\",\r\n                \"isDeleted\": false,\r\n                \"requestDetails\": [\r\n                  {\r\n                    \"requestDetailID\": -6714494,\r\n                    \"requestHeaderID\": -94141231,\r\n                    \"bookID\": -80081852,\r\n                    \"books\": {\r\n                      \"bookID\": -36604591,\r\n                      \"acceptedAdminID\": -97080096,\r\n                      \"bookName\": \"enim tempor est ut\",\r\n                      \"bookPagesCount\": -55287901,\r\n                      \"bookRating\": 48775824.62162477,\r\n                      \"publisher\": \"aute ut sunt\",\r\n                      \"author\": \"anim consequat in consectetur dolore\",\r\n                      \"bookRatingCount\": -67461384,\r\n                      \"bookDescription\": \"dolor ut\",\r\n                      \"isAvailable\": false,\r\n                      \"isDamaged\": true,\r\n                      \"createdDate\": \"cillum cupidatat\"\r\n                    },\r\n                    \"requestDetailDescription\": \"incididunt sed\",\r\n                    \"isDamaged\": false,\r\n                    \"isLost\": true\r\n                  },\r\n                  {\r\n                    \"requestDetailID\": -88684681,\r\n                    \"requestHeaderID\": 97641356,\r\n                    \"bookID\": 98472638,\r\n                    \"books\": {\r\n                      \"bookID\": -91869192,\r\n                      \"acceptedAdminID\": 15133666,\r\n                      \"bookName\": \"mollit\",\r\n                      \"bookPagesCount\": 5443725,\r\n                      \"bookRating\": -8269378.559137672,\r\n                      \"publisher\": \"tempor\",\r\n                      \"author\": \"aliqua \",\r\n                      \"bookRatingCount\": -72721760,\r\n                      \"bookDescription\": \"dolore Duis\",\r\n                      \"isAvailable\": true,\r\n                      \"isDamaged\": true,\r\n                      \"createdDate\": \"labore ex\"\r\n                    },\r\n                    \"requestDetailDescription\": \"officia commodo\",\r\n                    \"isDamaged\": false,\r\n                    \"isLost\": false\r\n                  }\r\n                ],\r\n                \"students\": {\r\n                    \"studentID\": 51352121,\r\n                    \"acceptedAdminID\": -37593478,\r\n                    \"studentName\": \"deserunt mollit sit\",\r\n                    \"studentSSID\": \"magna ea ullamco\",\r\n                    \"studentUniversityID\": \"i\",\r\n                    \"spamCount\": -66289982,\r\n                    \"isSuspended\": false,\r\n                    \"isRegistered\": true,\r\n                    \"createdDate\": \"mollit eiusmod officia ea\",\r\n                    \"isBlocked\": true,\r\n                    \"reportPoint\": 50573857,\r\n                    \"isSpam\": false,\r\n                    \"isDeleted\": true\r\n                  }\r\n                }),\r\n        };\r\n\r\n        let result: boolean = await $.ajax(settings).done(res => {\r\n            return res;\r\n        });\r\n        return result;\r\n    }\r\n\r\n\r\n    /************************************************************************************************/\r\n    /************************************************************************************************/\r\n    /***************************************  student api  ******************************************/\r\n    /************************************************************************************************/\r\n    /************************************************************************************************/\r\n    private studentReport: IStudentReport[] = []\r\n    private Student: IStudent[] = [];\r\n\r\n    public getStudentReport() {\r\n        return this.GetStudentReport();\r\n    }\r\n    public getStudent() {\r\n        return this.GetStudent();\r\n    }\r\n    public acceptNewRegister(id: number) {\r\n        return this.AcceptNewRegister(id);\r\n    }\r\n    public deleteNewRegister(id: number) {\r\n        return this.DeleteNewRegister(id)\r\n    }\r\n    public updateStudent(student: IStudent) {\r\n        return this.UpdateStudent(student);\r\n    }\r\n    public createStudent(student: IStudent) {\r\n        return this.CreateStudent(student);\r\n    }\r\n    public suspendStudent(id: number) {\r\n        return this.SuspendStudent(id);\r\n    }\r\n    public blockStudent(id: number) {\r\n        return this.BlockStudent(id);\r\n    }\r\n\r\n    private async GetStudentReport() {\r\n        var settings = {\r\n            \"url\": this.address.getBaseUrl() + this.address.getUrlAddress().studentReport,\r\n            \"method\": \"GET\",\r\n            \"timeout\": 0,\r\n            \"headers\": {\r\n                \"Accept\": \"text/plain\"\r\n            },\r\n        };\r\n\r\n        this.studentReport = await $.ajax(settings).done(function (res) {\r\n            return res;\r\n        });\r\n        return this.studentReport;\r\n    }\r\n    private async GetStudent() {\r\n        var settings = {\r\n            \"url\": this.address.getBaseUrl() + this.address.getUrlAddress().studentList,\r\n            \"method\": \"GET\",\r\n            \"timeout\": 0,\r\n            \"headers\": {\r\n                \"Accept\": \"text/plain\"\r\n            },\r\n        };\r\n\r\n        this.Student = await $.ajax(settings).done(function (res) {\r\n            return res;\r\n        });\r\n        return this.Student;\r\n    }\r\n    private async AcceptNewRegister(id: number) {\r\n        let studentChange = this.address.getUrlAddress().studentChange\r\n            .replace(\"{0}\", id.toString()).replace(\"{1}\", this.address.getMethod().student.IsRegistered.toString())\r\n        var settings = {\r\n            \"url\": this.address.getBaseUrl() + studentChange,\r\n            \"method\": \"PATCH\",\r\n            \"timeout\": 0,\r\n            \"headers\": {\r\n                \"Accept\": \"text/plain\"\r\n            },\r\n        };\r\n\r\n        let result: boolean = await $.ajax(settings).done(res => {\r\n            return res;\r\n        });\r\n        return result;\r\n    }\r\n    private async DeleteNewRegister(id: number) {\r\n        var settings = {\r\n            \"url\": this.address.getBaseUrl() + this.address.getUrlAddress().newRegisterDelete + id,\r\n            \"method\": \"DELETE\",\r\n            \"timeout\": 0,\r\n            \"headers\": {\r\n                \"Accept\": \"text/plain\"\r\n            },\r\n        };\r\n\r\n        let result: boolean = await $.ajax(settings).done(res => {\r\n            return res;\r\n        });\r\n        return result;\r\n    }\r\n    private async UpdateStudent(student: IStudent) {\r\n        var settings = {\r\n            \"url\": this.address.getBaseUrl() + this.address.getUrlAddress().studentList,\r\n            \"method\": \"PUT\",\r\n            \"timeout\": 0,\r\n            \"headers\": {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\": \"text/plain\"\r\n            },\r\n            \"data\": JSON.stringify({\r\n                \"studentID\": student.studentID,\r\n                \"studentName\": student.studentName,\r\n                \"studentSSID\": student.studentSSID,\r\n                \"studentUniversityID\": student.studentUniversityID,\r\n                \"spamCount\": student.spamCount,\r\n                \"isSuspended\": student.isSuspended,\r\n                \"isRegistered\": student.isRegistered,\r\n                \"createdDate\": student.createdDate,\r\n                \"isBlocked\": student.isBlocked,\r\n                \"reportPoint\": student.reportPoint,\r\n                \"isSpam\": student.isSpam\r\n            }),\r\n        };\r\n\r\n        let result: boolean = await $.ajax(settings).done(res => {\r\n            return res;\r\n        });\r\n        return result;\r\n    }\r\n    private async CreateStudent(student: IStudent) {\r\n        var settings = {\r\n            \"url\": this.address.getBaseUrl() + this.address.getUrlAddress().studentList,\r\n            \"method\": \"POST\",\r\n            \"timeout\": 0,\r\n            \"headers\": {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\": \"text/plain\"\r\n            },\r\n            \"data\": JSON.stringify({\r\n                \"studentID\": student.studentID,\r\n                \"studentName\": student.studentName,\r\n                \"studentSSID\": student.studentSSID,\r\n                \"studentUniversityID\": student.studentUniversityID,\r\n                \"spamCount\": student.spamCount,\r\n                \"isSuspended\": student.isSuspended,\r\n                \"isRegistered\": student.isRegistered,\r\n                \"createdDate\": student.createdDate,\r\n                \"isBlocked\": student.isBlocked,\r\n                \"reportPoint\": student.reportPoint,\r\n                \"isSpam\": student.isSpam,\r\n                \"AcceptedAdminID\": student.adminID\r\n            }),\r\n        };\r\n\r\n        let result: boolean = await $.ajax(settings).done(res => {\r\n            return res;\r\n        });\r\n        return result;\r\n    }\r\n    private async SuspendStudent(id: number) {\r\n        let studentChange = this.address.getUrlAddress().studentChange\r\n            .replace(\"{0}\", id.toString()).replace(\"{1}\", this.address.getMethod().student.IsSuspended.toString())\r\n        var settings = {\r\n            \"url\": this.address.getBaseUrl() + studentChange,\r\n            \"method\": \"PATCH\",\r\n            \"timeout\": 0,\r\n            \"headers\": {\r\n                \"Accept\": \"text/plain\"\r\n            },\r\n        };\r\n\r\n        let result: boolean = await $.ajax(settings).done(res => {\r\n            return res;\r\n        });\r\n        return result;\r\n    }\r\n    private async BlockStudent(id: number) {\r\n        let studentChange = this.address.getUrlAddress().studentChange\r\n            .replace(\"{0}\", id.toString()).replace(\"{1}\", this.address.getMethod().student.IsBlocked.toString())\r\n        var settings = {\r\n            \"url\": this.address.getBaseUrl() + studentChange,\r\n            \"method\": \"PATCH\",\r\n            \"timeout\": 0,\r\n            \"headers\": {\r\n                \"Accept\": \"text/plain\"\r\n            },\r\n        };\r\n\r\n        let result: boolean = await $.ajax(settings).done(res => {\r\n            return res;\r\n        });\r\n        return result;\r\n    }\r\n\r\n    /************************************************************************************************/\r\n    /************************************************************************************************/\r\n    /***************************************  comment api  ******************************************/\r\n    /************************************************************************************************/\r\n    /************************************************************************************************/\r\n    //comment header less than 20 words\r\n    private comment: IComment[] = []\r\n\r\n    public getComment() {\r\n        return this.getCommentList()\r\n    }\r\n    public acceptComment(id: number) {\r\n        this.AcceptComment(id);\r\n    }\r\n    public deleteComment(id: number) {\r\n        this.DeleteComment(id);\r\n    }\r\n\r\n    private async getCommentList() {\r\n        var settings = {\r\n            \"url\": this.address.getBaseUrl() + this.address.getUrlAddress().commentList,\r\n            \"method\": \"GET\",\r\n            \"timeout\": 0,\r\n            \"headers\": {\r\n                \"Accept\": \"text/plain\"\r\n            },\r\n        };\r\n\r\n        this.comment = await $.ajax(settings).done(function (res) {\r\n            return res;\r\n        });\r\n        return this.comment;\r\n    }\r\n    private async AcceptComment(id: number) {\r\n        var settings = {\r\n            \"url\": this.address.getBaseUrl() + this.address.getUrlAddress().commentAccept + id,\r\n            \"method\": \"DELETE\",\r\n            \"timeout\": 0,\r\n            \"headers\": {\r\n                \"Accept\": \"text/plain\"\r\n            },\r\n        };\r\n\r\n        await $.ajax(settings);\r\n    }\r\n    private async DeleteComment(id: number) {\r\n        var settings = {\r\n            \"url\": this.address.getBaseUrl() + this.address.getUrlAddress().commentDelete + id,\r\n            \"method\": \"DELETE\",\r\n            \"timeout\": 0,\r\n            \"headers\": {\r\n                \"Accept\": \"text/plain\"\r\n            },\r\n        };\r\n\r\n        await $.ajax(settings);\r\n    }\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}